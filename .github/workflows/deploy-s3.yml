name: Deploy Frontend to S3

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci
          npm install

      - name: Run tests
        run: npm test -- --watchAll=false --coverage --passWithNoTests

      - name: Build
        run: npm run build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Deploy to S3
        if: github.ref == 'refs/heads/main'
        run: |
          aws s3 sync build/ s3://${{ secrets.S3_BUCKET_NAME }}/frontend --delete --cache-control "max-age=31536000,public"
          aws s3 cp build/index.html s3://${{ secrets.S3_BUCKET_NAME }}/frontend/index.html --cache-control "no-cache,no-store,must-revalidate"

      - name: Invalidate CloudFront cache
        if: github.ref == 'refs/heads/main'
        run: |
          if [ -n "${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}" ]; then
            aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"
          fi

      - name: Deploy to S3 (PR)
        if: github.event_name == 'pull_request'
        run: |
          aws s3 sync build/ s3://${{ secrets.S3_BUCKET_NAME }}-pr-${{ github.event.number }}/frontend --delete --cache-control "max-age=31536000,public"
          aws s3 cp build/index.html s3://${{ secrets.S3_BUCKET_NAME }}-pr-${{ github.event.number }}/frontend/index.html --cache-control "no-cache,no-store,must-revalidate" 